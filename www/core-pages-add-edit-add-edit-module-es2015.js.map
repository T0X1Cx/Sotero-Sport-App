{"version":3,"sources":["./src/app/core/pages/add-edit/add-edit-routing.module.ts","./src/app/core/pages/add-edit/add-edit.module.ts","./src/app/core/pages/add-edit/add-edit.page.scss","./src/app/core/pages/add-edit/add-edit.page.html","./src/app/core/pages/add-edit/add-edit.page.ts"],"names":[],"mappings":"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","file":"core-pages-add-edit-add-edit-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddEditPage } from './add-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddEditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddEditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddEditPageRoutingModule } from './add-edit-routing.module';\n\nimport { AddEditPage } from './add-edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddEditPageRoutingModule\n  ],\n  declarations: [AddEditPage]\n})\nexport class AddEditPageModule { }\n","export default \"@font-face {\\n  font-family: myFont;\\n  src: url('SFProDisplay-Semibold.ttf');\\n}\\n* {\\n  font-family: myFont;\\n}\\n.mInput {\\n  font-size: 1.5em;\\n  margin-bottom: 10px;\\n}\\n.rep {\\n  margin-left: 148px;\\n}\\nspan {\\n  color: #b8a990;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2FkZC1lZGl0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0VBQ0EscUNBQUE7QUFDRjtBQUNBO0VBQ0UsbUJBQUE7QUFDRjtBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUNGO0FBRUE7RUFDRSxrQkFBQTtBQUNGO0FBRUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoiYWRkLWVkaXQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBteUZvbnQ7XG4gIHNyYzogdXJsKFwiLi4vLi4vLi4vLi4vYXNzZXRzL2ZvbnRzL3NmcHJvL1NGUHJvRGlzcGxheS1TZW1pYm9sZC50dGZcIik7XG59XG4qIHtcbiAgZm9udC1mYW1pbHk6IG15Rm9udDtcbn1cblxuLm1JbnB1dCB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5yZXAge1xuICBtYXJnaW4tbGVmdDogMTQ4cHg7XG59XG5cbnNwYW4ge1xuICBjb2xvcjogI2I4YTk5MDtcbn1cblxuLy8gaW9uLWNhcmQtaGVhZGVyIHtcbi8vICAgYmFja2dyb3VuZC1jb2xvcjogIzNjM2M0MTtcbi8vICAgZm9udC1zaXplOiAxZW07XG4vLyB9XG4vLyBpb24taXRlbSB7XG4vLyAgIGJhY2tncm91bmQtY29sb3I6ICMzYzNjNDE7XG4vLyB9XG4iXX0= */\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-label *ngIf=\\\"item.title.length < 1\\\" color=\\\"soterosport-cream\\\"\\n      >Nuevo ejercicio</ion-label\\n    >\\n    <ion-label>{{item.title}}</ion-label>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" menu=\\\"first\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-text-center\\\">\\n  <ion-card style=\\\"margin-top: 30px\\\">\\n    <!-- --------------------------------------------------------------------------------------- -->\\n    <!-- ------------------------------------ TÍTULO ------------------------------------------- -->\\n\\n    <form (ngSubmit)=\\\"createdItem(formAddEdit)\\\" #formAddEdit=\\\"ngForm\\\">\\n      <ion-item>\\n        <ion-input\\n          [(ngModel)]=\\\"item.title\\\"\\n          name=\\\"title\\\"\\n          type=\\\"text\\\"\\n          autocapitalize\\n          required\\n          clearInput\\n          placeholder=\\\"Ejercicio\\\"\\n        ></ion-input>\\n        <ion-icon color=\\\"soterosport-blue\\\" slot=\\\"end\\\" name=\\\"bookmark\\\"></ion-icon>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- DESCRIPCIÓN ---------------------------------------- -->\\n\\n      <ion-item>\\n        <ion-input\\n          [(ngModel)]=\\\"item.description\\\"\\n          name=\\\"description\\\"\\n          type=\\\"text\\\"\\n          autocapitalize\\n          clearInput\\n          required\\n          placeholder=\\\"Descripción\\\"\\n        ></ion-input>\\n        <ion-icon\\n          color=\\\"soterosport-darkcream\\\"\\n          slot=\\\"end\\\"\\n          name=\\\"clipboard\\\"\\n        ></ion-icon>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- PREPARACIÓN ---------------------------------------- -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Preparación</span>\\n      </ion-item>\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('preparationMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"preparationMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('preparationMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('preparationSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"preparationSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('preparationSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- ----------------------------------- TIEMPO ------------------------------------------ -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Tiempo</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('timeMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"timeMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('timeMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('timeSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"timeSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('timeSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- --------------------------------- REPETICIONES -------------------------------------- -->\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <!-- Título -->\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"ion-no-margin\\\">Repeticiones</span>\\n          </ion-item>\\n          <!-- Input -->\\n          <ion-item>\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('repeats')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"item.repeats\\\"\\n                name=\\\"repeats\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              >\\n              </ion-input\\n              ><ion-button (click)=\\\"addTime('repeats')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button\\n            ></ion-row>\\n          </ion-item>\\n        </ion-col>\\n\\n        <!-- --------------------------------------------------------------------------------- -->\\n        <!-- ----------------------------------- SERIES -------------------------------------- -->\\n\\n        <ion-col size=\\\"6\\\">\\n          <!-- Título -->\\n          <ion-item lines=\\\"none\\\">\\n            <span>Series</span>\\n          </ion-item>\\n          <!-- Input -->\\n          <ion-item>\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('sets')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"item.sets\\\"\\n                name=\\\"sets\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              >\\n              </ion-input\\n              ><ion-button (click)=\\\"addTime('sets')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button\\n            ></ion-row>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- DESCANSO REPETICIONES ------------------------------ -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Descanso repeticiones</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restRepsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restRepsMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restRepsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restRepsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restRepsSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restRepsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- --------------------------------DESCANSO SERIES ------------------------------------- -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Descanso series</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restSetsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restSetsMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restSetsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restSetsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restSetsSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restSetsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- ------------------------------------ BOTONES ---------------------------------------- -->\\n\\n      <!-- Botón guardar -->\\n      <ion-button\\n        *ngIf=\\\"buttonStatus === 'create'\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"\\n        (item.title.length &&\\n        item.description.length &&\\n        (preparationMin || preparationSec) &&\\n        (restSetsMin || restSetsSec) &&\\n        (restRepsMin || restRepsSec) &&\\n        (timeMin || timeSec) &&\\n        item.sets &&\\n        item.repeats ) < 1\\\"\\n        class=\\\"ion-margin\\\"\\n        color=\\\"soterosport-yellow\\\"\\n        expand=\\\"block\\\"\\n      >\\n        <ion-icon slot=\\\"end\\\" name=\\\"folder-open\\\"></ion-icon>\\n        Guardar\\n      </ion-button>\\n\\n      <ion-button\\n        *ngIf=\\\"buttonStatus === 'update'\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"item.title.length < 1\\\"\\n        class=\\\"ion-margin\\\"\\n        color=\\\"soterosport-yellow\\\"\\n        expand=\\\"block\\\"\\n      >\\n        <ion-icon slot=\\\"end\\\" name=\\\"folder-open\\\"></ion-icon>\\n        Actualizar\\n      </ion-button>\\n    </form>\\n  </ion-card>\\n</ion-content>\\n\\n<!-- Footer con los botones -->\\n<ion-footer class=\\\"ion-text-center\\\"> </ion-footer>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IList } from 'src/app/shared/interfaces/interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ItemsService } from '../../../shared/services/items.service';\nimport { NgForm } from '@angular/forms';\nimport { UiService } from '../../../shared/services/ui.service';\nimport { IItem } from '../../../shared/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.page.html',\n  styleUrls: ['./add-edit.page.scss'],\n})\n\n\nexport class AddEditPage implements OnInit, OnDestroy {\n\n  list: IList;\n  listId: string;\n  itemId: string;\n  listTitle: String\n\n  buttonStatus: string;\n  buttonType: string;\n  load: boolean;\n\n  item: IItem = {\n    title: '',\n    description: '',\n    created: null,\n    completed: false,\n    preparation: null,\n    sets: 2,\n    time: null,\n    restSets: null,\n    repeats: 2,\n    restReps: null,\n    totalTime: null,\n    list: null,\n\n  }\n\n  // Nubers\n  preparationSec: number = 0;\n  preparationMin: number = 0;\n  timeSec: number = 0;\n  timeMin: number = 0;\n  restRepsSec: number = 0;\n  restRepsMin: number = 0;\n  restSetsSec: number = 0;\n  restSetsMin: number = 0;\n\n  date: any = new Date().toISOString()\n\n\n  constructor\n    (\n      private itemsService: ItemsService,\n      private actvdRoute: ActivatedRoute,\n      private uiService: UiService,\n      private route: Router\n    ) { }\n\n\n  ngOnDestroy(): void {\n\n  }\n\n\n  ngOnInit() {\n\n    this.listId = this.actvdRoute.snapshot.paramMap.get('listId');\n    this.itemId = this.actvdRoute.snapshot.paramMap.get('itemId');\n\n\n    if (this.itemId !== null) {\n      this.buttonStatus = 'update'\n      this.itemsService.getItemById(this.itemId)\n        .subscribe(resp => {\n\n          const rItem = resp.items[0];\n\n          const load = this.item = rItem;\n          this.preparationMin = Math.trunc(rItem.preparation / 60);\n          this.preparationSec = rItem.preparation %= 60\n          this.timeMin = Math.trunc(rItem.time / 60);\n          this.timeSec = rItem.time %= 60\n          this.restRepsMin = Math.trunc(rItem.restReps / 60);\n          this.restRepsSec = rItem.restReps %= 60\n          this.restSetsMin = Math.trunc(rItem.restSets / 60);\n          this.restSetsSec = rItem.restSets %= 60\n\n          if (load) {\n            this.load = true\n          }\n        });\n    } else {\n      this.buttonStatus = 'create'\n    }\n\n  }\n\n  addTime(option: string) {\n\n    switch (option) {\n\n      case 'preparationMin':\n        if (this.preparationMin === 59) {\n          this.preparationMin = 0;\n        } else {\n          this.preparationMin++\n        }\n        break;\n\n      case 'preparationSec':\n        if (this.preparationSec === 59) {\n          this.preparationSec = 0;\n        } else {\n          this.preparationSec++\n        }\n        break;\n\n      case 'timeMin':\n        if (this.timeMin === 59) {\n          this.timeMin = 0;\n        } else {\n          this.timeMin++\n        }\n        break;\n\n      case 'timeSec':\n        if (this.timeSec === 59) {\n          this.timeSec = 0;\n        } else {\n          this.timeSec++\n        }\n        break;\n\n      case 'restSetsMin':\n\n        if (this.restSetsMin === 59) {\n          this.restSetsMin = 0;\n        } else {\n          this.restSetsMin++\n        }\n        break;\n\n      case 'restSetsSec':\n        if (this.restSetsSec === 59) {\n          this.restSetsSec = 0;\n        } else {\n          this.restSetsSec++;\n        }\n        break;\n\n      case 'restRepsMin':\n        if (this.restRepsMin === 59) {\n          this.restRepsMin = 0;\n        } else {\n          this.restRepsMin++\n        }\n        break;\n\n      case 'restRepsSec':\n        if (this.restRepsSec === 59) {\n          this.restRepsSec = 0;\n        } else {\n          this.restRepsSec++\n        }\n        break;\n\n      case 'repeats':\n        if (this.item.repeats === 100) {\n          this.item.repeats = 2;\n        } else {\n          this.item.repeats++\n        }\n        break;\n\n      case 'sets':\n        if (this.item.sets === 100) {\n          this.item.sets = 2;\n        } else {\n          this.item.sets++\n        }\n        break;\n\n      default:\n        break;\n    }\n\n  }\n\n  removeTime(option: string) {\n\n    switch (option) {\n\n      case 'preparationMin':\n        if (this.preparationMin === 0) {\n          this.preparationMin = 59;\n        } else {\n          this.preparationMin--;\n        }\n        break;\n      case 'preparationSec':\n        if (this.preparationSec === 0) {\n          this.preparationSec = 59;\n        } else {\n          this.preparationSec--;\n        }\n        break;\n\n      case 'timeMin':\n        if (this.timeMin === 0) {\n          this.timeMin = 59;\n        } else {\n          this.timeMin--;\n        }\n        break;\n      case 'timeSec':\n        if (this.timeSec === 0) {\n          this.timeSec = 59;\n        } else {\n          this.timeSec--;\n        }\n        break;\n\n      case 'restSetsMin':\n        if (this.restSetsMin === 0) {\n          this.restSetsMin = 59;\n        } else {\n          this.restSetsMin--;\n        }\n        break;\n      case 'restSetsSec':\n        if (this.restSetsSec === 0) {\n          this.restSetsSec = 59;\n        } else {\n          this.restSetsSec--;\n        }\n        break;\n\n      case 'restRepsMin':\n        if (this.restRepsMin === 0) {\n          this.restRepsMin = 59;\n        } else {\n          this.restRepsMin--;\n        }\n        break;\n      case 'restRepsSec':\n        if (this.restRepsSec === 0) {\n          this.restRepsSec = 59;\n        } else {\n          this.restRepsSec--;\n        }\n        break;\n\n      case 'repeats':\n        if (this.item.repeats === 2) {\n          this.item.repeats = 100;\n        } else {\n          this.item.repeats--;\n        }\n        break;\n      case 'sets':\n        if (this.item.sets === 2) {\n          this.item.sets = 100;\n        } else {\n          this.item.sets--;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n  }\n  // Crear Item y actualizar item\n\n  async createdItem(formAddEdit: NgForm) {\n\n    if (this.preparationMin != 0) {\n      this.item.preparation = this.preparationSec + (this.preparationMin * 60);\n    } else {\n      this.item.preparation = this.preparationSec;\n    }\n\n    if (this.restSetsMin != 0) {\n      this.item.restSets = this.restSetsSec + (this.restSetsMin * 60);\n    } else {\n      this.item.restSets = this.restSetsSec;\n    }\n\n    if (this.timeMin != 0) {\n      this.item.time = this.timeSec + (this.timeMin * 60);\n    } else {\n      this.item.time = this.timeSec;\n    }\n\n    if (this.restRepsMin != 0) {\n      this.item.restReps = this.restRepsSec + (this.restRepsMin * 60);\n    } else {\n      this.item.restReps = this.restRepsSec;\n    }\n\n\n    if (this.load === true) {\n\n      if (formAddEdit.invalid) { return };\n\n      const updated = await this.itemsService.updateItem(this.listId, this.itemId, this.item);\n      console.info(updated);\n\n      if (updated) {\n        this.route.navigate(['/main/tabs/items/'+this.listId]).then(() => {\n          window.location.reload();\n\n  });\n\n      } else {\n        this.uiService.presentToast('Error al actualizar item')\n      }\n\n    } else {\n\n      if (formAddEdit.invalid) { return; }\n      console.log(this.item);\n\n      // Total Time\n\n\n      const valid = await this.itemsService.createdItem(this.item, this.listId);\n\n      if (valid) {\n\n        // Volvemos a la lista de items\n        this.route.navigateByUrl(`/main/tabs/items/${this.listId}`);\n        console.log('Mandamos el listId respuesta --> ' + this.listId);\n\n        // Purgamos el objeto para dejarlo vacio\n        this.item = {\n          title: '',\n          description: '',\n          created: null,\n          completed: false,\n          preparation: null,\n          sets: null,\n          time: null,\n          restSets: null,\n          repeats: null,\n          restReps: null,\n          totalTime: null,\n          list: null,\n\n        }\n\n      } else {\n        this.uiService.alertInfo('Error al crear ejercicio');\n      }\n    }\n  }\n\n\n\n\n}\n"],"sourceRoot":"webpack:///"}