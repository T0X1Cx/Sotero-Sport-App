{"version":3,"sources":["webpack:///src/app/core/pages/lists/lists.page.ts","webpack:///src/app/core/pages/lists/lists.page.html","webpack:///src/app/core/pages/lists/lists-routing.module.ts","webpack:///src/app/core/pages/lists/lists.page.scss","webpack:///src/app/core/pages/lists/lists.module.ts"],"names":["SplashScreen","ListsPage","listsService","itemsService","alertCtrl","uiService","route","lists","enabled","list","title","completed","nextsItems","newList","subscribe","unshift","listId","_id","listTitle","hide","error","console","log","event","pull","getLists","resp","push","target","complete","length","disabled","createdList","navigateByUrl","create","cssClass","header","inputs","name","type","placeholder","buttons","text","role","handler","data","presentToast","alert","present","index","deleteList","deleteItemsList","splice","message","value","titulo","updateList","update","loadLists","selector","template","routes","path","component","ListsPageRoutingModule","imports","forChild","exports","ListsPageModule","declarations"],"mappings":"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","file":"lists-lists-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Plugins } from '@capacitor/core';\nimport { AlertController } from '@ionic/angular';\nimport { IList } from 'src/app/shared/interfaces/interfaces';\nimport { ListsService } from 'src/app/shared/services/lists.service';\nimport { UiService } from 'src/app/shared/services/ui.service';\nimport { ItemsService } from '../../../shared/services/items.service';\n\nconst { SplashScreen } = Plugins;\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.page.html',\n  styleUrls: ['./lists.page.scss'],\n})\nexport class ListsPage implements OnInit {\n\n  lists: IList[] = [];\n  enabled = true;\n\n  list = {\n    title: '',\n    completed: false,\n  }\n\n  listId: string;\n  listTitle: string;\n  listLength: number;\n\n\n  constructor(\n    private listsService: ListsService,\n    private itemsService: ItemsService,\n    private alertCtrl: AlertController,\n    private uiService: UiService,\n    private route: Router\n  ) { }\n\n  ngOnInit() {\n\n    this.nextsItems();\n    this.listsService.newList.subscribe(list => {\n      this.lists.unshift(list)\n      this.listId = list._id;\n      this.listTitle = list.title;\n    });\n\n  }\n\n\n  ionViewDidEnter() {\n\n    SplashScreen.hide().catch(error => {\n      console.log(error);\n    });\n  }\n\n  // Cargar las pÃ¡ginas\n  loadLists(event) {\n\n    this.nextsItems(event, true);\n    this.enabled = true;\n    this.lists = []\n\n  }\n\n  // Infinite Scroll\n  async nextsItems(event?, pull: boolean = false) {\n\n\n    this.listsService.getLists(pull) // getList de listService // Esto me devuelve las listas del usuario logeado\n      .subscribe(resp => {\n        console.log(resp);\n\n        this.lists.push(...resp.lists);\n\n        if (event) {\n          event.target.complete();\n\n          if (resp.lists.length === 0)\n            event.target.disabled = false;\n\n        }\n\n      });\n\n  }\n\n  // Crear nueva lista\n  async createdList() {\n\n    console.log(this.list);\n    await this.listsService.createdList(this.list);\n\n    this.list = {\n      title: '',\n      completed: false\n    }\n\n    this.route.navigateByUrl(`main/tabs/items/${this.listId}/${this.listTitle}`);\n    console.log('Mandamos el listid --> ' + this.listId);\n\n    // this.router.navigateByUrl(`/tabs/tab1/agregar/${listaId}`)\n\n  }\n\n  // Alert para crear lista\n  async addList() {\n\n    const alert = await this.alertCtrl.create({\n      cssClass: 'alert-list',\n      header: 'Nueva lista',\n      inputs: [\n        {\n          name: 'title',\n          type: 'text',\n          placeholder: 'Nombre de la lista '\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n          }\n        },\n        {\n          text: 'Crear',\n          handler: (data) => {\n\n            if (data.title.length > 0) {\n              this.list.title = data.title\n              this.createdList();\n            } else {\n              this.uiService.presentToast('Debe escribir un nombre para la lista');\n            }\n\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  goToItems(listId, listTitle) {\n    this.route.navigateByUrl(`main/tabs/items/${listId}/${listTitle}`);\n  }\n\n\n  // Eliminar lista\n\n  deleteList(listId: string, index: number) {\n    this.listsService.deleteList(listId);\n    this.itemsService.deleteItemsList(listId);\n    this.lists.splice(index, 1);\n  }\n\n  // Alert para eliminar lista\n  async deleteListAlert(listId: string, index: number) {\n\n    const alert = await this.alertCtrl.create({\n      header: 'Eliminar Lista',\n      message: 'Â¿ EstÃ¡ seguro que desea eliminar esta lista ?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n          }\n        },\n        {\n          text: 'Borrar',\n          handler: () => {\n\n            this.deleteList(listId, index)\n            this.uiService.presentToast('Lista eliminada correctamente.');\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  async editListAlert(listId: string, list: string) {\n\n\n    const alert = await this.alertCtrl.create({\n      header: 'Editar lista',\n      inputs: [\n        {\n          name: 'titulo',\n          type: 'text',\n          value: list,\n          placeholder: 'Nombre de la lista '\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n            // this.list.closeSlidingItems();\n          }\n        },\n        {\n          text: 'Guardar',\n          handler: async (data) => {\n\n            console.log(data);\n\n\n            this.list.title = data.titulo\n\n            const update = await this.listsService.updateList(listId, this.list);\n\n            if (update) {\n              this.loadLists(list)\n              this.uiService.presentToast('Item actualizado correctamente')// Toast con mensaje de actualizado\n\n            } else {\n\n              this.uiService.presentToast('Error al actualizar item')\n            }\n\n\n          }\n\n\n        }\n      ]\n    });\n\n    await alert.present();\n\n  }\n\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <!-- Menu -->\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" menu=\\\"first\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <!-- TÃ­tulo -->\\n    <ion-title class=\\\"ion-text-center\\\">Entrenamientos</ion-title>\\n    <!-- Icono info -->\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button>\\n        <ion-icon name=\\\"information-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content appAutoHide>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"loadLists($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"3\\\" size-md=\\\"4\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n        <ion-list>\\n          <!-- | filtroCompletado:terminada -->\\n          <ion-item-sliding *ngFor=\\\"let list of lists; let i = index\\\">\\n            <!-- (click)=\\\"listSelect(list)\\\" -->\\n            <ion-item detail (click)=\\\"goToItems(list._id, list.title)\\\">\\n              <ion-label>{{ list.title }}</ion-label>\\n              <ion-note slot=\\\"end\\\"></ion-note>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\">\\n              <ion-item-option\\n                (click)=\\\"deleteListAlert(list._id, i)\\\"\\n                color=\\\"danger\\\"\\n              >\\n                <ion-icon\\n                  color=\\\"soterosport-cream\\\"\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"close\\\"\\n                ></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n\\n            <ion-item-options side=\\\"start\\\">\\n              <ion-item-option\\n                (click)=\\\"editListAlert(list._id, list.title)\\\"\\n                color=\\\"soterosport-blue\\\"\\n              >\\n                <ion-icon\\n                  color=\\\"soterosport-cream\\\"\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"create-outline\\\"\\n                ></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- Infinite Scroll -->\\n  <ion-infinite-scroll\\n    [disabled]=\\\"!enabled\\\"\\n    threshold=\\\"25%\\\"\\n    (ionInfinite)=\\\"nextsItems($event)\\\"\\n  >\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"soterosport-darkyellow\\\" (click)=\\\"addList()\\\">\\n      <ion-icon color=\\\"soterosport-cream\\\" size=\\\"large\\\" name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListsPage } from './lists.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0cy5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListsPageRoutingModule } from './lists-routing.module';\n\nimport { ListsPage } from './lists.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListsPageRoutingModule,\n\n  ],\n  declarations: [ListsPage]\n})\nexport class ListsPageModule { }\n"]}