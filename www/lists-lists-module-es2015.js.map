{"version":3,"sources":["./src/app/core/pages/lists/lists.page.ts","./src/app/core/pages/lists/lists.page.html","./src/app/core/pages/lists/lists-routing.module.ts","./src/app/core/pages/lists/lists.page.scss","./src/app/core/pages/lists/lists.module.ts"],"names":[],"mappings":"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","file":"lists-lists-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Plugins } from '@capacitor/core';\nimport { AlertController } from '@ionic/angular';\nimport { IList } from 'src/app/shared/interfaces/interfaces';\nimport { ListsService } from 'src/app/shared/services/lists.service';\nimport { UiService } from 'src/app/shared/services/ui.service';\nimport { ItemsService } from '../../../shared/services/items.service';\n\nconst { SplashScreen } = Plugins;\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.page.html',\n  styleUrls: ['./lists.page.scss'],\n})\nexport class ListsPage implements OnInit {\n\n  lists: IList[] = [];\n  enabled = true;\n\n  list = {\n    title: '',\n    completed: false,\n  }\n\n  listId: string;\n  listTitle: string;\n  listLength: number;\n\n\n  constructor(\n    private listsService: ListsService,\n    private itemsService: ItemsService,\n    private alertCtrl: AlertController,\n    private uiService: UiService,\n    private route: Router\n  ) { }\n\n  ngOnInit() {\n\n    this.nextsItems();\n    this.listsService.newList.subscribe(list => {\n      this.lists.unshift(list)\n      this.listId = list._id;\n      this.listTitle = list.title;\n    });\n\n  }\n\n\n  ionViewDidEnter() {\n\n    SplashScreen.hide().catch(error => {\n      console.log(error);\n    });\n  }\n\n  // Cargar las páginas\n  loadLists(event) {\n\n    this.nextsItems(event, true);\n    this.enabled = true;\n    this.lists = []\n\n  }\n\n  // Infinite Scroll\n  async nextsItems(event?, pull: boolean = false) {\n\n\n    this.listsService.getLists(pull) // getList de listService // Esto me devuelve las listas del usuario logeado\n      .subscribe(resp => {\n        console.log(resp);\n\n        this.lists.push(...resp.lists);\n\n        if (event) {\n          event.target.complete();\n\n          if (resp.lists.length === 0)\n            event.target.disabled = false;\n\n        }\n\n      });\n\n  }\n\n  // Crear nueva lista\n  async createdList() {\n\n    console.log(this.list);\n    await this.listsService.createdList(this.list);\n\n    this.list = {\n      title: '',\n      completed: false\n    }\n\n    this.route.navigateByUrl(`main/tabs/items/${this.listId}/${this.listTitle}`);\n    console.log('Mandamos el listid --> ' + this.listId);\n\n    // this.router.navigateByUrl(`/tabs/tab1/agregar/${listaId}`)\n\n  }\n\n  // Alert para crear lista\n  async addList() {\n\n    const alert = await this.alertCtrl.create({\n      cssClass: 'alert-list',\n      header: 'Nueva lista',\n      inputs: [\n        {\n          name: 'title',\n          type: 'text',\n          placeholder: 'Nombre de la lista '\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n          }\n        },\n        {\n          text: 'Crear',\n          handler: (data) => {\n\n            if (data.title.length > 0) {\n              this.list.title = data.title\n              this.createdList();\n            } else {\n              this.uiService.presentToast('Debe escribir un nombre para la lista');\n            }\n\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  goToItems(listId, listTitle) {\n    this.route.navigateByUrl(`main/tabs/items/${listId}/${listTitle}`);\n  }\n\n\n  // Eliminar lista\n\n  deleteList(listId: string, index: number) {\n    this.listsService.deleteList(listId);\n    this.itemsService.deleteItemsList(listId);\n    this.lists.splice(index, 1);\n  }\n\n  // Alert para eliminar lista\n  async deleteListAlert(listId: string, index: number) {\n\n    const alert = await this.alertCtrl.create({\n      header: 'Eliminar Lista',\n      message: '¿ Está seguro que desea eliminar esta lista ?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n          }\n        },\n        {\n          text: 'Borrar',\n          handler: () => {\n\n            this.deleteList(listId, index)\n            this.uiService.presentToast('Lista eliminada correctamente.');\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  async editListAlert(listId: string, list: string) {\n\n\n    const alert = await this.alertCtrl.create({\n      header: 'Editar lista',\n      inputs: [\n        {\n          name: 'titulo',\n          type: 'text',\n          value: list,\n          placeholder: 'Nombre de la lista '\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelar');\n            // this.list.closeSlidingItems();\n          }\n        },\n        {\n          text: 'Guardar',\n          handler: async (data) => {\n\n            console.log(data);\n\n\n            this.list.title = data.titulo\n\n            const update = await this.listsService.updateList(listId, this.list);\n\n            if (update) {\n              this.loadLists(list)\n              this.uiService.presentToast('Item actualizado correctamente')// Toast con mensaje de actualizado\n\n            } else {\n\n              this.uiService.presentToast('Error al actualizar item')\n            }\n\n\n          }\n\n\n        }\n      ]\n    });\n\n    await alert.present();\n\n  }\n\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <!-- Menu -->\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" menu=\\\"first\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <!-- Título -->\\n    <ion-title class=\\\"ion-text-center\\\">Entrenamientos</ion-title>\\n    <!-- Icono info -->\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button>\\n        <ion-icon name=\\\"information-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content appAutoHide>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"loadLists($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-lg=\\\"3\\\" size-md=\\\"4\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n        <ion-list>\\n          <!-- | filtroCompletado:terminada -->\\n          <ion-item-sliding *ngFor=\\\"let list of lists; let i = index\\\">\\n            <!-- (click)=\\\"listSelect(list)\\\" -->\\n            <ion-item detail (click)=\\\"goToItems(list._id, list.title)\\\">\\n              <ion-label>{{ list.title }}</ion-label>\\n              <ion-note slot=\\\"end\\\"></ion-note>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\">\\n              <ion-item-option\\n                (click)=\\\"deleteListAlert(list._id, i)\\\"\\n                color=\\\"danger\\\"\\n              >\\n                <ion-icon\\n                  color=\\\"soterosport-cream\\\"\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"close\\\"\\n                ></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n\\n            <ion-item-options side=\\\"start\\\">\\n              <ion-item-option\\n                (click)=\\\"editListAlert(list._id, list.title)\\\"\\n                color=\\\"soterosport-blue\\\"\\n              >\\n                <ion-icon\\n                  color=\\\"soterosport-cream\\\"\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"create-outline\\\"\\n                ></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- Infinite Scroll -->\\n  <ion-infinite-scroll\\n    [disabled]=\\\"!enabled\\\"\\n    threshold=\\\"25%\\\"\\n    (ionInfinite)=\\\"nextsItems($event)\\\"\\n  >\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"soterosport-darkyellow\\\" (click)=\\\"addList()\\\">\\n      <ion-icon color=\\\"soterosport-cream\\\" size=\\\"large\\\" name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListsPage } from './lists.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0cy5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListsPageRoutingModule } from './lists-routing.module';\n\nimport { ListsPage } from './lists.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListsPageRoutingModule,\n\n  ],\n  declarations: [ListsPage]\n})\nexport class ListsPageModule { }\n"],"sourceRoot":"webpack:///"}