{"version":3,"sources":["webpack:///src/app/core/pages/add-edit/add-edit-routing.module.ts","webpack:///src/app/core/pages/add-edit/add-edit.module.ts","webpack:///src/app/core/pages/add-edit/add-edit.page.scss","webpack:///src/app/core/pages/add-edit/add-edit.page.html","webpack:///src/app/core/pages/add-edit/add-edit.page.ts"],"names":["routes","path","component","AddEditPageRoutingModule","imports","forChild","exports","AddEditPageModule","declarations","AddEditPage","itemsService","actvdRoute","uiService","route","item","title","description","created","completed","preparation","sets","time","restSets","repeats","restReps","totalTime","list","preparationSec","preparationMin","timeSec","timeMin","restRepsSec","restRepsMin","restSetsSec","restSetsMin","date","Date","toISOString","listId","snapshot","paramMap","get","itemId","buttonStatus","getItemById","subscribe","resp","rItem","items","load","Math","trunc","option","formAddEdit","invalid","updateItem","updated","console","info","presentToast","navigateByUrl","log","createdItem","valid","alertInfo","selector","template"],"mappings":"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","file":"core-pages-add-edit-add-edit-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddEditPage } from './add-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddEditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddEditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddEditPageRoutingModule } from './add-edit-routing.module';\n\nimport { AddEditPage } from './add-edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddEditPageRoutingModule\n  ],\n  declarations: [AddEditPage]\n})\nexport class AddEditPageModule { }\n","export default \"@font-face {\\n  font-family: myFont;\\n  src: url('SFProDisplay-Semibold.ttf');\\n}\\n* {\\n  font-family: myFont;\\n}\\n.mInput {\\n  font-size: 1.5em;\\n  margin-bottom: 10px;\\n}\\n.rep {\\n  margin-left: 148px;\\n}\\nspan {\\n  color: #b8a990;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2FkZC1lZGl0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0VBQ0EscUNBQUE7QUFDRjtBQUNBO0VBQ0UsbUJBQUE7QUFDRjtBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUNGO0FBRUE7RUFDRSxrQkFBQTtBQUNGO0FBRUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoiYWRkLWVkaXQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBteUZvbnQ7XG4gIHNyYzogdXJsKFwiLi4vLi4vLi4vLi4vYXNzZXRzL2ZvbnRzL3NmcHJvL1NGUHJvRGlzcGxheS1TZW1pYm9sZC50dGZcIik7XG59XG4qIHtcbiAgZm9udC1mYW1pbHk6IG15Rm9udDtcbn1cblxuLm1JbnB1dCB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5yZXAge1xuICBtYXJnaW4tbGVmdDogMTQ4cHg7XG59XG5cbnNwYW4ge1xuICBjb2xvcjogI2I4YTk5MDtcbn1cblxuLy8gaW9uLWNhcmQtaGVhZGVyIHtcbi8vICAgYmFja2dyb3VuZC1jb2xvcjogIzNjM2M0MTtcbi8vICAgZm9udC1zaXplOiAxZW07XG4vLyB9XG4vLyBpb24taXRlbSB7XG4vLyAgIGJhY2tncm91bmQtY29sb3I6ICMzYzNjNDE7XG4vLyB9XG4iXX0= */\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-label *ngIf=\\\"item.title.length < 1\\\" color=\\\"soterosport-cream\\\"\\n      >Nuevo ejercicio</ion-label\\n    >\\n    <ion-label>{{item.title}}</ion-label>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\" menu=\\\"first\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-text-center\\\">\\n  <ion-card style=\\\"margin-top: 30px\\\">\\n    <!-- --------------------------------------------------------------------------------------- -->\\n    <!-- ------------------------------------ TÍTULO ------------------------------------------- -->\\n\\n    <form (ngSubmit)=\\\"createdItem(formAddEdit)\\\" #formAddEdit=\\\"ngForm\\\">\\n      <ion-item>\\n        <ion-input\\n          [(ngModel)]=\\\"item.title\\\"\\n          name=\\\"title\\\"\\n          type=\\\"text\\\"\\n          autocapitalize\\n          required\\n          clearInput\\n          placeholder=\\\"Ejercicio\\\"\\n        ></ion-input>\\n        <ion-icon color=\\\"soterosport-blue\\\" slot=\\\"end\\\" name=\\\"bookmark\\\"></ion-icon>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- DESCRIPCIÓN ---------------------------------------- -->\\n\\n      <ion-item>\\n        <ion-input\\n          [(ngModel)]=\\\"item.description\\\"\\n          name=\\\"description\\\"\\n          type=\\\"text\\\"\\n          autocapitalize\\n          clearInput\\n          required\\n          placeholder=\\\"Descripción\\\"\\n        ></ion-input>\\n        <ion-icon\\n          color=\\\"soterosport-darkcream\\\"\\n          slot=\\\"end\\\"\\n          name=\\\"clipboard\\\"\\n        ></ion-icon>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- PREPARACIÓN ---------------------------------------- -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Preparación</span>\\n      </ion-item>\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('preparationMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"preparationMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('preparationMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('preparationSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"preparationSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('preparationSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- ----------------------------------- TIEMPO ------------------------------------------ -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Tiempo</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('timeMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"timeMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('timeMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('timeSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"timeSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('timeSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- --------------------------------- REPETICIONES -------------------------------------- -->\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <!-- Título -->\\n          <ion-item lines=\\\"none\\\">\\n            <span class=\\\"ion-no-margin\\\">Repeticiones</span>\\n          </ion-item>\\n          <!-- Input -->\\n          <ion-item>\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('repeats')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"item.repeats\\\"\\n                name=\\\"repeats\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              >\\n              </ion-input\\n              ><ion-button (click)=\\\"addTime('repeats')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button\\n            ></ion-row>\\n          </ion-item>\\n        </ion-col>\\n\\n        <!-- --------------------------------------------------------------------------------- -->\\n        <!-- ----------------------------------- SERIES -------------------------------------- -->\\n\\n        <ion-col size=\\\"6\\\">\\n          <!-- Título -->\\n          <ion-item lines=\\\"none\\\">\\n            <span>Series</span>\\n          </ion-item>\\n          <!-- Input -->\\n          <ion-item>\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('sets')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"item.sets\\\"\\n                name=\\\"sets\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              >\\n              </ion-input\\n              ><ion-button (click)=\\\"addTime('sets')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button\\n            ></ion-row>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- -------------------------------- DESCANSO REPETICIONES ------------------------------ -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Descanso repeticiones</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restRepsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restRepsMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restRepsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restRepsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restRepsSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restRepsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- --------------------------------DESCANSO SERIES ------------------------------------- -->\\n\\n      <ion-item lines=\\\"none\\\">\\n        <span class=\\\"ion-no-margin\\\">Descanso series</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-row>\\n          <!-- MINUTOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restSetsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restSetsMin\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restSetsMin')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n\\n          <!-- SEGUNDOS -->\\n          <ion-col size=\\\"6\\\">\\n            <ion-row>\\n              <ion-button (click)=\\\"removeTime('restSetsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon name=\\\"remove-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <ion-input\\n                class=\\\"ion-text-center\\\"\\n                [(ngModel)]=\\\"restSetsSec\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                type=\\\"number\\\"\\n                disabled\\n              ></ion-input\\n              ><ion-button (click)=\\\"addTime('restSetsSec')\\\" fill=\\\"outline\\\">\\n                <ion-icon\\n                  name=\\\"add-outline\\\"\\n                  slot=\\\"icon-only\\\"\\n                ></ion-icon> </ion-button></ion-row\\n          ></ion-col>\\n        </ion-row>\\n      </ion-item>\\n\\n      <!-- ------------------------------------------------------------------------------------- -->\\n      <!-- ------------------------------------ BOTONES ---------------------------------------- -->\\n\\n      <!-- Botón guardar -->\\n      <ion-button\\n        *ngIf=\\\"buttonStatus === 'create'\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"\\n        (item.title.length &&\\n        item.description.length &&\\n        (preparationMin || preparationSec) &&\\n        (restSetsMin || restSetsSec) &&\\n        (restRepsMin || restRepsSec) &&\\n        (timeMin || timeSec) &&\\n        item.sets &&\\n        item.repeats ) < 1\\\"\\n        class=\\\"ion-margin\\\"\\n        color=\\\"soterosport-yellow\\\"\\n        expand=\\\"block\\\"\\n      >\\n        <ion-icon slot=\\\"end\\\" name=\\\"folder-open\\\"></ion-icon>\\n        Guardar\\n      </ion-button>\\n\\n      <ion-button\\n        *ngIf=\\\"buttonStatus === 'update'\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"item.title.length < 1\\\"\\n        class=\\\"ion-margin\\\"\\n        color=\\\"soterosport-yellow\\\"\\n        expand=\\\"block\\\"\\n      >\\n        <ion-icon slot=\\\"end\\\" name=\\\"folder-open\\\"></ion-icon>\\n        Actualizar\\n      </ion-button>\\n    </form>\\n  </ion-card>\\n</ion-content>\\n\\n<!-- Footer con los botones -->\\n<ion-footer class=\\\"ion-text-center\\\"> </ion-footer>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IList } from 'src/app/shared/interfaces/interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ItemsService } from '../../../shared/services/items.service';\nimport { NgForm } from '@angular/forms';\nimport { UiService } from '../../../shared/services/ui.service';\nimport { PickerController } from '@ionic/angular';\nimport { PickerOptions } from '@ionic/core'\nimport { IItem } from '../../../shared/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.page.html',\n  styleUrls: ['./add-edit.page.scss'],\n})\n\n\nexport class AddEditPage implements OnInit, OnDestroy {\n\n  list: IList;\n  listId: string;\n  itemId: string;\n\n  buttonStatus: string;\n  buttonType: string;\n  load: boolean;\n\n  item: IItem = {\n    title: '',\n    description: '',\n    created: null,\n    completed: false,\n    preparation: null,\n    sets: 2,\n    time: null,\n    restSets: null,\n    repeats: 2,\n    restReps: null,\n    totalTime: null,\n    list: null,\n\n  }\n\n  // Nubers\n  preparationSec: number = 0;\n  preparationMin: number = 0;\n  timeSec: number = 0;\n  timeMin: number = 0;\n  restRepsSec: number = 0;\n  restRepsMin: number = 0;\n  restSetsSec: number = 0;\n  restSetsMin: number = 0;\n\n  date: any = new Date().toISOString()\n\n\n  constructor\n    (\n      private itemsService: ItemsService,\n      private actvdRoute: ActivatedRoute,\n      private uiService: UiService,\n      private route: Router\n    ) { }\n\n\n  ngOnDestroy(): void {\n\n  }\n\n\n  ngOnInit() {\n\n    this.listId = this.actvdRoute.snapshot.paramMap.get('listId');\n    this.itemId = this.actvdRoute.snapshot.paramMap.get('itemId');\n\n    if (this.itemId !== null) {\n      this.buttonStatus = 'update'\n      this.itemsService.getItemById(this.itemId)\n        .subscribe(resp => {\n\n          const rItem = resp.items[0];\n\n          const load = this.item = rItem;\n          this.preparationMin = Math.trunc(rItem.preparation / 60);\n          this.preparationSec = rItem.preparation %= 60\n          this.timeMin = Math.trunc(rItem.time / 60);\n          this.timeSec = rItem.time %= 60\n          this.restRepsMin = Math.trunc(rItem.restReps / 60);\n          this.restRepsSec = rItem.restReps %= 60\n          this.restSetsMin = Math.trunc(rItem.restSets / 60);\n          this.restSetsSec = rItem.restSets %= 60\n\n          if (load) {\n            this.load = true\n          }\n        });\n    } else {\n      this.buttonStatus = 'create'\n    }\n\n  }\n\n  addTime(option: string) {\n\n    switch (option) {\n\n      case 'preparationMin':\n        if (this.preparationMin === 59) {\n          this.preparationMin = 0;\n        } else {\n          this.preparationMin++\n        }\n        break;\n\n      case 'preparationSec':\n        if (this.preparationSec === 59) {\n          this.preparationSec = 0;\n        } else {\n          this.preparationSec++\n        }\n        break;\n\n      case 'timeMin':\n        if (this.timeMin === 59) {\n          this.timeMin = 0;\n        } else {\n          this.timeMin++\n        }\n        break;\n\n      case 'timeSec':\n        if (this.timeSec === 59) {\n          this.timeSec = 0;\n        } else {\n          this.timeSec++\n        }\n        break;\n\n      case 'restSetsMin':\n\n        if (this.restSetsMin === 59) {\n          this.restSetsMin = 0;\n        } else {\n          this.restSetsMin++\n        }\n        break;\n\n      case 'restSetsSec':\n        if (this.restSetsSec === 59) {\n          this.restSetsSec = 0;\n        } else {\n          this.restSetsSec++;\n        }\n        break;\n\n      case 'restRepsMin':\n        if (this.restRepsMin === 59) {\n          this.restRepsMin = 0;\n        } else {\n          this.restRepsMin++\n        }\n        break;\n\n      case 'restRepsSec':\n        if (this.restRepsSec === 59) {\n          this.restRepsSec = 0;\n        } else {\n          this.restRepsSec++\n        }\n        break;\n\n      case 'repeats':\n        if (this.item.repeats === 100) {\n          this.item.repeats = 2;\n        } else {\n          this.item.repeats++\n        }\n        break;\n\n      case 'sets':\n        if (this.item.sets === 100) {\n          this.item.sets = 2;\n        } else {\n          this.item.sets++\n        }\n        break;\n\n      default:\n        break;\n    }\n\n  }\n\n  removeTime(option: string) {\n\n    switch (option) {\n\n      case 'preparationMin':\n        if (this.preparationMin === 0) {\n          this.preparationMin = 59;\n        } else {\n          this.preparationMin--;\n        }\n        break;\n      case 'preparationSec':\n        if (this.preparationSec === 0) {\n          this.preparationSec = 59;\n        } else {\n          this.preparationSec--;\n        }\n        break;\n\n      case 'timeMin':\n        if (this.timeMin === 0) {\n          this.timeMin = 59;\n        } else {\n          this.timeMin--;\n        }\n        break;\n      case 'timeSec':\n        if (this.timeSec === 0) {\n          this.timeSec = 59;\n        } else {\n          this.timeSec--;\n        }\n        break;\n\n      case 'restSetsMin':\n        if (this.restSetsMin === 0) {\n          this.restSetsMin = 59;\n        } else {\n          this.restSetsMin--;\n        }\n        break;\n      case 'restSetsSec':\n        if (this.restSetsSec === 0) {\n          this.restSetsSec = 59;\n        } else {\n          this.restSetsSec--;\n        }\n        break;\n\n      case 'restRepsMin':\n        if (this.restRepsMin === 0) {\n          this.restRepsMin = 59;\n        } else {\n          this.restRepsMin--;\n        }\n        break;\n      case 'restRepsSec':\n        if (this.restRepsSec === 0) {\n          this.restRepsSec = 59;\n        } else {\n          this.restRepsSec--;\n        }\n        break;\n\n      case 'repeats':\n        if (this.item.repeats === 2) {\n          this.item.repeats = 100;\n        } else {\n          this.item.repeats--;\n        }\n        break;\n      case 'sets':\n        if (this.item.sets === 2) {\n          this.item.sets = 100;\n        } else {\n          this.item.sets--;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n  }\n  // Crear Item y actualizar item\n\n  async createdItem(formAddEdit: NgForm) {\n\n    if (this.preparationMin != 0) {\n      this.item.preparation = this.preparationSec + (this.preparationMin * 60);\n    } else {\n      this.item.preparation = this.preparationSec;\n    }\n\n    if (this.restSetsMin != 0) {\n      this.item.restSets = this.restSetsSec + (this.restSetsMin * 60);\n    } else {\n      this.item.restSets = this.restSetsSec;\n    }\n\n    if (this.timeMin != 0) {\n      this.item.time = this.timeSec + (this.timeMin * 60);\n    } else {\n      this.item.time = this.timeSec;\n    }\n\n    if (this.restRepsMin != 0) {\n      this.item.restReps = this.restRepsSec + (this.restRepsMin * 60);\n    } else {\n      this.item.restReps = this.restRepsSec;\n    }\n\n\n    if (this.load === true) {\n\n      if (formAddEdit.invalid) { return };\n\n      const updated = await this.itemsService.updateItem(this.listId, this.itemId, this.item);\n      console.info(updated);\n\n      if (updated) {\n        this.uiService.presentToast('Item actualizado correctamente')// Toast con mensaje de actualizado\n        this.route.navigateByUrl(`/main/tabs/items/${this.listId}`);\n      } else {\n        this.uiService.presentToast('Error al actualizar item')\n      }\n\n    } else {\n\n      if (formAddEdit.invalid) { return; }\n      console.log(this.item);\n\n      // Total Time\n\n\n      const valid = await this.itemsService.createdItem(this.item, this.listId);\n\n      if (valid) {\n\n        // Volvemos a la lista de items\n        this.route.navigateByUrl(`/main/tabs/items/${this.listId}`);\n        console.log('Mandamos el listId respuesta --> ' + this.listId);\n\n        // Purgamos el objeto para dejarlo vacio\n        this.item = {\n          title: '',\n          description: '',\n          created: null,\n          completed: false,\n          preparation: null,\n          sets: null,\n          time: null,\n          restSets: null,\n          repeats: null,\n          restReps: null,\n          totalTime: null,\n          list: null,\n\n        }\n\n      } else {\n        this.uiService.alertInfo('Error al crear ejercicio');\n      }\n    }\n  }\n\n\n\n\n}\n"]}