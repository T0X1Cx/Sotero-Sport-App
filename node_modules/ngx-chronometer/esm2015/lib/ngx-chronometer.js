import { Subject } from 'rxjs';
export var TimeChonometer;
(function (TimeChonometer) {
    TimeChonometer[TimeChonometer["timemedio"] = 0] = "timemedio";
    TimeChonometer[TimeChonometer["timeone"] = 1] = "timeone";
    TimeChonometer[TimeChonometer["timetwo"] = 2] = "timetwo";
})(TimeChonometer || (TimeChonometer = {}));
export var StatusChonometer;
(function (StatusChonometer) {
    StatusChonometer[StatusChonometer["desactived"] = 0] = "desactived";
    StatusChonometer[StatusChonometer["pause"] = 1] = "pause";
    StatusChonometer[StatusChonometer["start"] = 2] = "start";
    StatusChonometer[StatusChonometer["finish"] = 3] = "finish";
    StatusChonometer[StatusChonometer["restart"] = 4] = "restart";
    StatusChonometer[StatusChonometer["stop"] = 5] = "stop";
    StatusChonometer[StatusChonometer["refresh"] = 6] = "refresh";
})(StatusChonometer || (StatusChonometer = {}));
export class Chronometer {
    /**
     * @description Constructor of class
     * @param o Object default = {}
     */
    constructor(o = {}) {
        this.time = new Array(0, 0, 0);
        this.onChronometer = new Subject();
        this.id = o.id;
        this.second = o.second || 0;
        this.status = o.status || StatusChonometer.pause;
        this.timeLabel = o.timeLabel;
        this.maxSecond = o.maxSecond || 60;
        this.maxMinute = o.maxMinute || 60;
        this.maxHour = o.maxHour || 60;
        this.limitSecond = o.limitSecond;
    }
    start() {
        this.status = StatusChonometer.start;
        this.onChronometer.next(this);
    }
    pause() {
        this.status = StatusChonometer.pause;
        this.onChronometer.next(this);
    }
    restart() {
        this.status = StatusChonometer.restart;
        this.onChronometer.next(this);
    }
    stop() {
        this.status = StatusChonometer.stop;
        this.onChronometer.next(this);
    }
    refresh() {
        this.onChronometer.next(this);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWNocm9ub21ldGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9uZ3gtY2hyb25vbWV0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFDN0MsTUFBTSxDQUFOLElBQVksY0FJWDtBQUpELFdBQVksY0FBYztJQUN0Qiw2REFBYSxDQUFBO0lBQ2IseURBQVcsQ0FBQTtJQUNYLHlEQUFXLENBQUE7QUFDZixDQUFDLEVBSlcsY0FBYyxLQUFkLGNBQWMsUUFJekI7QUFFRCxNQUFNLENBQU4sSUFBWSxnQkFRWDtBQVJELFdBQVksZ0JBQWdCO0lBQ3hCLG1FQUFjLENBQUE7SUFDZCx5REFBUyxDQUFBO0lBQ1QseURBQVMsQ0FBQTtJQUNULDJEQUFVLENBQUE7SUFDViw2REFBVyxDQUFBO0lBQ1gsdURBQVEsQ0FBQTtJQUNSLDZEQUFXLENBQUE7QUFDZixDQUFDLEVBUlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQVEzQjtBQUNELE1BQU0sT0FBTyxXQUFXO0lBWXBCOzs7T0FHRztJQUNILFlBQVksSUFBUyxFQUFFO1FBUHZCLFNBQUksR0FBa0IsSUFBSSxLQUFLLENBQVMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNqRCxrQkFBYSxHQUF5QixJQUFJLE9BQU8sRUFBZSxDQUFDO1FBTzdELElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLGdCQUFnQixDQUFDLEtBQUssQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztRQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDL0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUM7UUFDckMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELEtBQUs7UUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQztRQUNyQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsT0FBTztRQUNILElBQUksQ0FBQyxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsT0FBTyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7UUFDcEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0LCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBlbnVtIFRpbWVDaG9ub21ldGVyIHtcbiAgICB0aW1lbWVkaW8gPSAwLFxuICAgIHRpbWVvbmUgPSAxLFxuICAgIHRpbWV0d28gPSAyXG59XG5cbmV4cG9ydCBlbnVtIFN0YXR1c0Nob25vbWV0ZXIge1xuICAgIGRlc2FjdGl2ZWQgPSAwLFxuICAgIHBhdXNlID0gMSxcbiAgICBzdGFydCA9IDIsXG4gICAgZmluaXNoID0gMyxcbiAgICByZXN0YXJ0ID0gNCxcbiAgICBzdG9wID0gNSxcbiAgICByZWZyZXNoID0gNlxufVxuZXhwb3J0IGNsYXNzIENocm9ub21ldGVyIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIHNlY29uZDogbnVtYmVyO1xuICAgIGxpbWl0U2Vjb25kOiBudW1iZXI7XG4gICAgc3RhdHVzOiBTdGF0dXNDaG9ub21ldGVyO1xuICAgIHRpbWVMYWJlbDogVGltZUNob25vbWV0ZXI7XG4gICAgbWF4U2Vjb25kOiBudW1iZXI7XG4gICAgbWF4TWludXRlOiBudW1iZXI7XG4gICAgbWF4SG91cjogbnVtYmVyO1xuICAgIHRpbWU6IEFycmF5PG51bWJlcj4gPSBuZXcgQXJyYXk8bnVtYmVyPigwLCAwLCAwKTtcbiAgICBvbkNocm9ub21ldGVyOiBTdWJqZWN0PENocm9ub21ldGVyPiA9IG5ldyBTdWJqZWN0PENocm9ub21ldGVyPigpO1xuICAgIGludGVydmFsU3ViOiBTdWJzY3JpcHRpb247XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIENvbnN0cnVjdG9yIG9mIGNsYXNzXG4gICAgICogQHBhcmFtIG8gT2JqZWN0IGRlZmF1bHQgPSB7fVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG86IGFueSA9IHt9KSB7XG4gICAgICAgIHRoaXMuaWQgPSBvLmlkO1xuICAgICAgICB0aGlzLnNlY29uZCA9IG8uc2Vjb25kIHx8IDA7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gby5zdGF0dXMgfHwgU3RhdHVzQ2hvbm9tZXRlci5wYXVzZTtcbiAgICAgICAgdGhpcy50aW1lTGFiZWwgPSBvLnRpbWVMYWJlbDtcbiAgICAgICAgdGhpcy5tYXhTZWNvbmQgPSBvLm1heFNlY29uZCB8fCA2MDtcbiAgICAgICAgdGhpcy5tYXhNaW51dGUgPSBvLm1heE1pbnV0ZSB8fCA2MDtcbiAgICAgICAgdGhpcy5tYXhIb3VyID0gby5tYXhIb3VyIHx8IDYwO1xuICAgICAgICB0aGlzLmxpbWl0U2Vjb25kID0gby5saW1pdFNlY29uZDtcbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBTdGF0dXNDaG9ub21ldGVyLnN0YXJ0O1xuICAgICAgICB0aGlzLm9uQ2hyb25vbWV0ZXIubmV4dCh0aGlzKTtcbiAgICB9XG5cbiAgICBwYXVzZSgpIHtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBTdGF0dXNDaG9ub21ldGVyLnBhdXNlO1xuICAgICAgICB0aGlzLm9uQ2hyb25vbWV0ZXIubmV4dCh0aGlzKTtcbiAgICB9XG5cbiAgICByZXN0YXJ0KCkge1xuICAgICAgICB0aGlzLnN0YXR1cyA9IFN0YXR1c0Nob25vbWV0ZXIucmVzdGFydDtcbiAgICAgICAgdGhpcy5vbkNocm9ub21ldGVyLm5leHQodGhpcyk7XG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBTdGF0dXNDaG9ub21ldGVyLnN0b3A7XG4gICAgICAgIHRoaXMub25DaHJvbm9tZXRlci5uZXh0KHRoaXMpO1xuICAgIH1cblxuICAgIHJlZnJlc2goKSB7XG4gICAgICAgIHRoaXMub25DaHJvbm9tZXRlci5uZXh0KHRoaXMpO1xuICAgIH1cbn0iXX0=