{"version":3,"file":"ngx-chronometer.js","sources":["../../../src/lib/ngx-chronometer.ts","../../../src/lib/ngx-chronometer.directive.ts","../../../src/lib/ngx-chronometer.module.ts","../../../src/public-api.ts","../../../src/ngx-chronometer.ts"],"sourcesContent":["import { Subject, Subscription } from 'rxjs';\nexport enum TimeChonometer {\n    timemedio = 0,\n    timeone = 1,\n    timetwo = 2\n}\n\nexport enum StatusChonometer {\n    desactived = 0,\n    pause = 1,\n    start = 2,\n    finish = 3,\n    restart = 4,\n    stop = 5,\n    refresh = 6\n}\nexport class Chronometer {\n    id: number;\n    second: number;\n    limitSecond: number;\n    status: StatusChonometer;\n    timeLabel: TimeChonometer;\n    maxSecond: number;\n    maxMinute: number;\n    maxHour: number;\n    time: Array<number> = new Array<number>(0, 0, 0);\n    onChronometer: Subject<Chronometer> = new Subject<Chronometer>();\n    intervalSub: Subscription;\n    /**\n     * @description Constructor of class\n     * @param o Object default = {}\n     */\n    constructor(o: any = {}) {\n        this.id = o.id;\n        this.second = o.second || 0;\n        this.status = o.status || StatusChonometer.pause;\n        this.timeLabel = o.timeLabel;\n        this.maxSecond = o.maxSecond || 60;\n        this.maxMinute = o.maxMinute || 60;\n        this.maxHour = o.maxHour || 60;\n        this.limitSecond = o.limitSecond;\n    }\n\n    start() {\n        this.status = StatusChonometer.start;\n        this.onChronometer.next(this);\n    }\n\n    pause() {\n        this.status = StatusChonometer.pause;\n        this.onChronometer.next(this);\n    }\n\n    restart() {\n        this.status = StatusChonometer.restart;\n        this.onChronometer.next(this);\n    }\n\n    stop() {\n        this.status = StatusChonometer.stop;\n        this.onChronometer.next(this);\n    }\n\n    refresh() {\n        this.onChronometer.next(this);\n    }\n}","import { Directive, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { Chronometer, StatusChonometer } from './ngx-chronometer';\nimport { Subscription, interval, Subject } from 'rxjs';\nimport * as _ from 'lodash';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[chronometer]',\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    '[innerText]': 'innerText'\n  }\n})\nexport class NgxChronometerDirective implements OnInit, OnDestroy {\n\n  // tslint:disable-next-line:variable-name\n  _chronometer: Chronometer = new Chronometer();\n\n  /** sequence the time default 1000 = 1 second */\n  @Input() interval = 1000;\n  /** increment 1 unit */\n  @Input() increment = 1;\n  /** limit in second stop sequence the time */\n  @Input() limitSecond: number;\n  /** maximal second to step minute */\n  @Input() maxSecond: number;\n  /** maximal minute to step hour */\n  @Input() maxMinute: number;\n  /** maximal hour to reset chronometer */\n  @Input() maxHour: number;\n  /** maximal hour to reset chronometer */\n  @Input() isMinutes: boolean;\n  /** object chronometer */\n  @Input() set chronometer(chronometer: Chronometer) {\n    chronometer = chronometer || new Chronometer();\n    chronometer.maxSecond = this.maxSecond || chronometer.maxSecond || 60;\n    chronometer.maxMinute = this.maxMinute || chronometer.maxMinute || 60;\n    chronometer.maxHour = this.maxHour || chronometer.maxHour || 60;\n    chronometer.time = new Array<number>(0, 0, 0);\n    this._chronometer = this.activated(this.currentSecond(chronometer));\n  }\n  /** format to use default 00:00:00 custom 00/00/00 or other delimiter */\n  @Input() format = '00:00:00';\n  /** activated emit event sequence chronometer default false */\n  @Input() chronoEvents = false;\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onChronoEvent = new EventEmitter<Chronometer>();\n\n  private chronoSub: Subscription;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // tslint:disable-next-line:max-line-length\n    if (this._chronometer.onChronometer.observers == null) {\n      this._chronometer.onChronometer = new Subject<Chronometer>();\n    }\n    this.chronoSub = this._chronometer.onChronometer.subscribe((chronometer: Chronometer) => {\n      this._chronometer = this.activated(this.currentSecond(chronometer));\n    });\n  }\n\n  /**\n   * @description current seconds\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   */\n  currentSecond(chronometer: Chronometer): Chronometer {\n    const limitSecond = this.limitSecond || chronometer.limitSecond;\n    if (limitSecond && chronometer.second > limitSecond) {\n      chronometer.second = limitSecond;\n      chronometer.pause();\n      this._chronometer = chronometer;\n      if (this._chronometer.intervalSub) {\n        this._chronometer.intervalSub.unsubscribe();\n      }\n      this._chronometer.intervalSub = undefined;\n    }\n    return chronometer;\n  }\n\n  /**\n   * @description activated chronometer\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   */\n  private activated(chronometer: Chronometer = this._chronometer): Chronometer {\n    switch (chronometer.status) {\n      case StatusChonometer.pause:\n        this._chronometer = this.pause(chronometer); break;\n      case StatusChonometer.start:\n        this._chronometer = this.start(this.pause(chronometer));\n        break;\n      case StatusChonometer.restart:\n        chronometer.second = 0;\n        this._chronometer = this.start(chronometer);\n        break;\n      case StatusChonometer.stop:\n        chronometer.second = 0;\n        this._chronometer = this.pause(chronometer);\n        break;\n      default:\n        break;\n    }\n    return this.setTime(chronometer, 0);\n  }\n\n  /**\n   * @description pause seconds\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   */\n  private pause(chronometer: Chronometer): Chronometer {\n    return this.stop(chronometer);\n  }\n\n  /**\n   * @description stop seconds\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   */\n  private stop(chronometer): Chronometer {\n    if (chronometer.intervalSub) {\n      chronometer.intervalSub.unsubscribe();\n      chronometer.intervalSub = undefined;\n    }\n    return chronometer;\n  }\n\n  /**\n   * @description start seconds\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   */\n  private start(chronometer: Chronometer): Chronometer {\n    chronometer.status = 2;\n    if (!chronometer.intervalSub) {\n      chronometer.intervalSub = interval(this.interval).subscribe(() => {\n        chronometer = this.currentSecond(this.setTime(chronometer));\n      });\n    }\n    return chronometer;\n  }\n\n  /**\n   * @description inner the text element\n   * @see {Chronometer}\n   */\n  get innerText(): string {\n    const sep = (this.format || '').split('00');\n    const a = this.isMinutes ? 1 : 0;\n    switch (sep.length) {\n      case 1: return `${sep[0]}${this.timeFormat[a]}${sep[1]}`;\n      case 2: return `${sep[0]}${this.timeFormat[a]}${sep[1]}`;\n      case 3: return `${sep[0]}${this.timeFormat[1]}${sep[1]}${this.timeFormat[0]}${sep[2]}`;\n      case 4: return `${sep[0]}${this.timeFormat[2]}${sep[1]}${this.timeFormat[1]}${sep[2]}${this.timeFormat[0]}${sep[3]}`;\n      default: return `${sep[0]}${this.timeFormat[2]}${sep[1]}${this.timeFormat[1]}${sep[2]}${this.timeFormat[0]}${sep[3]}`;\n    }\n  }\n\n  /**\n   * @description format array time\n   * @see {Chronometer}\n   */\n  get timeFormat(): Array<string> {\n    const time = this._chronometer.time;\n    return Array<string>(\n      this.formatNumber(time[2]),\n      this.formatNumber(time[1]),\n      this.formatNumber(time[0])\n    );\n  }\n\n  /**\n   * @description return string 2 digit\n   * @param n number to format\n   */\n  formatNumber(n: number): string {\n    return `${n > 9 ? n : `0${n}`}`;\n  }\n\n  /**\n   * @description validator number\n   * @param n number to valid\n   */\n  validNumber(n: number) {\n    const enc = !_.isNaN(_.isNumber(n)) && n > 0;\n    if (!enc) {\n      console.error('Outdid maximo time no valid', n);\n      this._chronometer.pause();\n    }\n    return enc ? n : 60;\n  }\n\n  /**\n   * @description\n   * @param chronometer object current chronometer\n   * @see {Chronometer}\n   * @param second increment the time\n   * @see {increment} default [increment]=\"1\"\n   */\n  private setTime(chronometer: Chronometer, second = this.increment): Chronometer {\n    if (chronometer.second >= 0) {\n      chronometer.second = chronometer.second + second;\n      const diffSS = this.validNumber(chronometer.maxSecond);\n      const diffMM = this.validNumber(chronometer.maxMinute);\n      const hh = Math.trunc((chronometer.second / this.validNumber(chronometer.maxSecond)) / this.validNumber(chronometer.maxMinute));\n      const mm = Math.trunc(chronometer.second / this.validNumber(chronometer.maxSecond)) - hh * diffMM;\n      const ss = chronometer.second - Math.trunc(chronometer.second / diffSS) * diffSS;\n      if (hh === chronometer.maxHour) {\n        chronometer.second = 0;\n        chronometer.time = new Array(0, 0, 0);\n      } else {\n        chronometer.time = new Array(hh, mm, ss);\n      }\n    }\n    if (this.chronoEvents) {\n      this.onChronoEvent.emit(chronometer);\n    }\n    return chronometer;\n  }\n\n  ngOnDestroy() {\n    if (this.chronoSub) {\n      this.chronoSub.unsubscribe();\n    }\n    if (this._chronometer.intervalSub) {\n      this._chronometer.intervalSub.unsubscribe();\n    }\n    this._chronometer.onChronometer.unsubscribe();\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { NgxChronometerDirective } from './ngx-chronometer.directive';\n\n\n@NgModule({\n  declarations: [NgxChronometerDirective],\n  imports: [],\n  exports: [NgxChronometerDirective],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NgxChronometerModule { }\n","/*\n * Public API Surface of ngx-chronometer\n */\nexport * from './lib/ngx-chronometer';\nexport * from './lib/ngx-chronometer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxChronometerDirective as ɵa} from './lib/ngx-chronometer.directive';"],"names":["_.isNaN","_.isNumber"],"mappings":"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"}